!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN	Makefile	/^BIN = employee-manager-rpc$/;"	m
BUILD_DIR	Makefile	/^BUILD_DIR = bin$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CFDEBUG	Makefile	/^CFDEBUG = $(CFLAGS) -g -DDEBUG $(LDFLAGS)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -std=c18 -Wall$/;"	m
EMP_MAN_RPC_EMPLOYEES_GET_ID	src/headers/rpc.h	/^  EMP_MAN_RPC_EMPLOYEES_GET_ID$/;"	e	enum:__anon1
INCLUDES	Makefile	/^INCLUDES = -I$(INCLUDES_DIR) -I$(POSTGRES)$/;"	m
INCLUDES_DIR	Makefile	/^INCLUDES_DIR = \/usr\/include$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -o $(BIN) $(LIBPATH) $(LIBS)$/;"	m
LIBS	Makefile	/^LIBS = -lpq$/;"	m
MAX_RECV_BUFF_SIZE	src/headers/common.h	7;"	d
MAX_SEND_BUFF_SIZE	src/headers/common.h	6;"	d
MULTIPLY_ID	main.c	14;"	d	file:
POSTGRES	Makefile	/^POSTGRES = \/usr\/include\/postgresql$/;"	m
POSTGRES_INFO_H	src/headers/postgres_info.h	2;"	d
RM	Makefile	/^RM = \/bin\/rm -f$/;"	m
RPC_SERVER_PORT	src/headers/common.h	4;"	d
SEARCH_BY_ID_QUERY	src/db.c	/^const char SEARCH_BY_ID_QUERY[] = "SELECT * FROM employees WHERE id = $1 OR first = $1 OR last = $1";$/;"	v
SERIALIZE_BUFFER_DEFAULT_SIZE	src/headers/serialize.h	4;"	d
SQL_INFO	src/headers/postgres_info.h	/^const char SQL_INFO[] = {"dbname=employeemanager user=empman password=empymanbegressy! host=10.0.104.71 port=5432 sslmode=disable"};$/;"	v
SRC	Makefile	/^SRC = main.c $(wildcard src\/*.c)$/;"	m
__EMP_MAN_REST_SERIALIZE_H__	src/headers/serialize.h	2;"	d
__EMP_MAN_RPC_DB_H__	src/headers/db.h	2;"	d
__EMP_MAN_RPC_EMPLOYEES_H__	src/headers/employees.h	2;"	d
__EMP_MAN_RPC__	src/headers/rpc.h	2;"	d
__RPC_EMP_MAN_COMMON__	src/headers/common.h	2;"	d
address	src/headers/employees.h	/^  char* address;$/;"	m	struct:__anon2
buffer	src/headers/serialize.h	/^  char* buffer;$/;"	m	struct:ser_buff_t
client_param_t	src/headers/serialize.h	/^typedef struct client_param_t {$/;"	s
client_param_t	src/headers/serialize.h	/^} client_param_t;$/;"	t	typeref:struct:client_param_t
data	src/headers/employees.h	/^  struct employee_t*      data;$/;"	m	struct:__anon3	typeref:struct:__anon3::employee_t
email	src/headers/employees.h	/^  char* email;$/;"	m	struct:__anon2
employee_t	src/headers/employees.h	/^} employee_t;$/;"	t	typeref:struct:__anon2
empman_rpc_calls	src/headers/rpc.h	/^} empman_rpc_calls;$/;"	t	typeref:enum:__anon1
empman_rpc_db_clean_up	src/db.c	/^void empman_rpc_db_clean_up(PGconn* conn, PGresult* res) {$/;"	f
empman_rpc_db_disconnect	src/db.c	/^void empman_rpc_db_disconnect(PGconn* conn) {$/;"	f
empman_rpc_db_query	src/db.c	/^PGresult* empman_rpc_db_query(PGconn* conn,$/;"	f
empman_rpc_db_query_by_id	src/db.c	/^PGresult* empman_rpc_db_query_by_id(const char* const* query_params) {$/;"	f
empman_rpc_db_query_post	src/db.c	/^PGresult* empman_rpc_db_query_post(PGresult* res, const char* const* query_params) {$/;"	f
empman_rpc_handlers_employees_get_id	src/employees.c	/^void empman_rpc_handlers_employees_get_id(ser_buff_t* recv_buffer) {$/;"	f
empman_rpc_process_traffic	src/rpc.c	/^int empman_rpc_process_traffic(ser_buff_t* recv_buffer, ser_buff_t* send_buffer) {$/;"	f
ethnicity	src/headers/employees.h	/^  char* ethnicity;$/;"	m	struct:__anon2
first	src/headers/employees.h	/^  char* first;$/;"	m	struct:__anon2
gender	src/headers/employees.h	/^  char* gender;$/;"	m	struct:__anon2
head	src/headers/employees.h	/^  struct employee_list_node_t* head;$/;"	m	struct:__anon4	typeref:struct:__anon4::employee_list_node_t
id	src/headers/employees.h	/^  char* id;$/;"	m	struct:__anon2
last	src/headers/employees.h	/^  char* last;$/;"	m	struct:__anon2
list_node_t	src/headers/employees.h	/^} list_node_t;$/;"	t	typeref:struct:__anon3
list_t	src/headers/employees.h	/^} list_t;$/;"	t	typeref:struct:__anon4
main	main.c	/^int main(int argc, char** argv) {$/;"	f
multiply	main.c	/^int multiply(int a, int b) {$/;"	f
multiply_server_stub_marshal	main.c	/^void multiply_server_stub_marshal(int res, ser_buff_t* send_buffer) {$/;"	f
multiply_server_stub_unmarshal	main.c	/^int multiply_server_stub_unmarshal(ser_buff_t* recv_buffer) {$/;"	f
next	src/headers/employees.h	/^  struct employee_list_node_t* next;$/;"	m	struct:__anon3	typeref:struct:__anon3::employee_list_node_t
next	src/headers/serialize.h	/^  int next;$/;"	m	struct:ser_buff_t
payload_size	src/headers/serialize.h	/^  unsigned int payload_size;$/;"	m	struct:ser_header_t
phone	src/headers/employees.h	/^  char* phone;$/;"	m	struct:__anon2
recv_buff_size	src/headers/serialize.h	/^  unsigned int recv_buff_size;$/;"	m	struct:client_param_t
recv_ser_b	src/headers/serialize.h	/^  ser_buff_t*  recv_ser_b;$/;"	m	struct:client_param_t
rpc_call_id	src/headers/serialize.h	/^  empman_rpc_calls rpc_call_id;$/;"	m	struct:ser_header_t
rpc_proc_id	src/headers/serialize.h	/^  unsigned int rpc_proc_id;$/;"	m	struct:ser_header_t
salary	src/headers/employees.h	/^  int* salary;$/;"	m	struct:__anon2
ser_buff_t	src/headers/serialize.h	/^typedef struct ser_buff_t {$/;"	s
ser_buff_t	src/headers/serialize.h	/^} ser_buff_t;$/;"	t	typeref:struct:ser_buff_t
ser_header_t	src/headers/serialize.h	/^typedef struct ser_header_t {$/;"	s
ser_header_t	src/headers/serialize.h	/^} ser_header_t;$/;"	t	typeref:struct:ser_header_t
serlib_buffer_skip	src/serialize.c	/^void serlib_buffer_skip(ser_buff_t* b, unsigned long int skip_size) {$/;"	f
serlib_copy_in_buffer_by_size	src/serialize.c	/^void serlib_copy_in_buffer_by_size(ser_buff_t* client_send_ser_buffer, int size, char* value, int offset) {$/;"	f
serlib_deserialize_data_int	src/serialize.c	/^void serlib_deserialize_data_int(ser_buff_t* b, int* dest, int size) {$/;"	f
serlib_deserialize_data_string	src/serialize.c	/^void serlib_deserialize_data_string(ser_buff_t* b, char* dest, int size) {$/;"	f
serlib_deserialize_data_time_t	src/serialize.c	/^void serlib_deserialize_data_time_t(time_t* dest, ser_buff_t*b, int size) {$/;"	f
serlib_deserialize_employee_t	src/serialize.c	/^employee_t* serlib_deserialize_employee_t(ser_buff_t* b) {$/;"	f
serlib_deserialize_list_node_t	src/serialize.c	/^list_node_t* serlib_deserialize_list_node_t(ser_buff_t* b) {$/;"	f
serlib_deserialize_list_t	src/serialize.c	/^list_t* serlib_deserialize_list_t(ser_buff_t* b) {$/;"	f
serlib_free_buffer	src/serialize.c	/^void serlib_free_buffer(ser_buff_t* b) {$/;"	f
serlib_get_buffer_data_size	src/serialize.c	/^int serlib_get_buffer_data_size(ser_buff_t* b) {$/;"	f
serlib_get_buffer_length	src/serialize.c	/^int serlib_get_buffer_length(ser_buff_t* b) {$/;"	f
serlib_get_header_size	src/serialize.c	/^unsigned int serlib_get_header_size(void) {$/;"	f
serlib_init_buffer	src/serialize.c	/^void serlib_init_buffer(ser_buff_t** b) {$/;"	f
serlib_init_buffer_of_size	src/serialize.c	/^void serlib_init_buffer_of_size(ser_buff_t** b, int size) {$/;"	f
serlib_list_node_t	src/serialize.c	/^void serlib_list_node_t(list_node_t* list_node, ser_buff_t* b, void (*serialize_fn_ptr)(void*, ser_buff_t* b)) {$/;"	f
serlib_list_t	src/serialize.c	/^void serlib_list_t(list_t* list,$/;"	f
serlib_reset_buffer	src/serialize.c	/^int serlib_reset_buffer(ser_buff_t* b) {$/;"	f
serlib_serialize_data_string	src/serialize.c	/^void serlib_serialize_data_string(ser_buff_t* b, char* data, int nbytes) {$/;"	f
serlib_serialize_data_time_t	src/serialize.c	/^void serlib_serialize_data_time_t(time_t* dest, ser_buff_t*b, int size) {$/;"	f
serlib_serialize_employee_t	src/serialize.c	/^void serlib_serialize_employee_t(employee_t* employee, ser_buff_t* b) {$/;"	f
serlib_serialize_employee_t_wrapper	src/serialize.c	/^void serlib_serialize_employee_t_wrapper(void* obj, ser_buff_t* b) {$/;"	f
size	src/headers/serialize.h	/^  int size;$/;"	m	struct:ser_buff_t
start	src/headers/employees.h	/^  time_t start;$/;"	m	struct:__anon2
tid	src/headers/serialize.h	/^  unsigned int tid;$/;"	m	struct:ser_header_t
title	src/headers/employees.h	/^  char* title;$/;"	m	struct:__anon2
